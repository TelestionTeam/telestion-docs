<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="concept_writing_guidelines">
    <title>Concept Writing Guidelines</title>
    <shortdesc>Guidelines for writing concept topics</shortdesc>
    <prolog>
        <author>Pablo Klaschka</author>
    </prolog>
    <refbody>
        <section id="section_l3j_lbb_qmb">
            <note conref="../../reusables/notes.dita#notes/note_cg2_x1b_qmb"/>
        </section>
        <properties id="properties_eh5_nbb_qmb">
            <prophead>
                <proptypehd>Guideline</proptypehd>
                <propdeschd>Description</propdeschd>
            </prophead>
            <property>
                <proptype>Write in the present tense except for historical or future
                    references</proptype>
                <propdesc>n/a</propdesc>
            </property>
            <property>
                <proptype>Describe one concept per topic</proptype>
                <propdesc>This increases reusability of concepts. Overall, concepts should be
                    self-contained, making them reusable to introduce a concept whenever
                    necessary.</propdesc>
            </property>
            <property>
                <proptype>Describe a concept, not how to do something</proptype>
                <propdesc>It can be easy to include information about how something gets done in a
                    concept about that thing (for example, the installation of a library described
                    in the concept). Instructions (Procedures) belong in separate task
                    topics!</propdesc>
            </property>
            <property>
                <proptype><xmlelement>title</xmlelement>: only the concept's name</proptype>
                <propdesc>Don't write "creative" titles such as <q>Vert.x: A microservice framework
                        for Java</q>. Instead, keep it straight to the point (<q>Vert.x</q>) and
                    describe what it's in the <xmlelement>shortdesc</xmlelement>,
                    instead.</propdesc>
            </property>
            <property>
                <proptype>Always have a <xmlelement>shortdesc</xmlelement></proptype>
                <propdesc>Short descriptions get used at multiple points (such as the topic itself,
                    links to the topic and more). For consistency, every
                        <xmlelement>concept</xmlelement> should include a
                        <xmlelement>shortdesc</xmlelement> (this could, in short topics, even
                    replace the <xmlelement>conbody</xmlelement>) that in a short manner describes
                    the gist of the concept. For example: <q>Vert.x is an open-source microservice
                        framework for Java.</q></propdesc>
            </property>
            <property>
                <proptype>Use <xmlelement>term</xmlelement> for terms newly introduced in the
                    concept</proptype>
                <propdesc>If a concept introduces a new term, wrap it in a
                        <xmlelement>term</xmlelement> element.</propdesc>
            </property>
            <property>
                <proptype>Use <xmlatt>audience</xmlatt> and <xmlatt>platform</xmlatt> attributes
                    when appropriate</proptype>
                <propdesc>As concepts should be highly reusable, using metadata for conditional
                    processing (showing a specific <xmlelement>note</xmlelement> only to developers,
                    etc.) highly increases their readability for specific target audiences while
                    retaining reusability.</propdesc>
            </property>
            <property>
                <proptype>Write concepts to support tasks</proptype>
                <propdesc>Documentation should be centered on what a reader tries to do. Concepts
                    that don't relate to one or more tasks are (usually) not needed and should be
                    avoided.</propdesc>
            </property>
        </properties>
    </refbody>
</reference>
